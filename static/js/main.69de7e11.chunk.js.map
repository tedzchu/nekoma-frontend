{"version":3,"sources":["react-auth0-spa.js","views/Home.js","views/Login.js","components/PrivateRoute.js","components/queries.js","components/tables/ProductTable.js","components/forms/products/AddProductForm.js","components/forms/products/EditProductForm.js","components/Header.js","components/modal/Modal.js","components/modal/useModal.js","views/products/Products.js","components/forms/restocks/AddRestockForm.js","components/tables/TrendsTable.js","views/products/ProductActivity.js","views/products/Product.js","components/tables/EventTable.js","views/events/Events.js","views/sales/Sales.js","App.js","utils/history.js","index.js","GraphQLProvider.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Home","className","to","Login","loginWithRedirect","onClick","PrivateRoute","Component","component","path","rest","loading","isAuthenticated","useEffect","a","async","appState","targetUrl","render","props","gql","ADD_PRODUCT","ADD_RESTOCK","CATEGORIES_SUBSCRIPTION","PRODUCTS_SUBSCRIPTION","PRODUCT_SUBSCRIPTION","DELETE_PRODUCT","TOGGLE_ACTIVE","ProductTable","useSubscription","data","error","useMutation","toggleActive","message","products","length","map","product","key","id","sku","name","date_created","icon","enabled","variables","count","last_restock","state","find","editRow","console","log","deleteProduct","colSpan","AddProductForm","categories","categoryList","today","Date","initialFormState","category","date","toLocaleDateString","restock","addProduct","useState","setProduct","setDate","handleInputChange","event","target","value","autoComplete","onSubmit","preventDefault","cat","skus","parseInt","substring","skuNumber","Math","max","sku_code","concat","generateSKU","cat_id","date_added","hide","type","onChange","selected","EditProductForm","currentProduct","updateProduct","cancelUpdate","Header","logout","back","size","Modal","isShowing","content","ReactDOM","createPortal","Fragment","aria-modal","aria-hidden","tabIndex","role","data-dismiss","body","useModal","setIsShowing","toggle","Products","categoriesData","CategorySubscription","setProducts","editing","setEditing","setCurrentProduct","addProductForm","editProductForm","updatedProduct","AddRestockForm","proudct_id","addRestock","setRestock","product_id","TrendsTable","restocks","options","legend","display","scales","yAxes","ticks","beginAtZero","generateData","activity","labels","forEach","element","push","datasets","label","lineTension","fill","backgroundColor","borderColor","borderWidth","ProductActivity","Product","ProductSubscription","match","params","addRestockForm","EventTable","events","deleteEvent","Events","setEvents","filter","Sales","eventId","salesData","day","items","total","cc","female","eventSales","setSales","App","exact","createBrowserHistory","library","add","faCheck","faTimes","faCoffee","faArrowLeft","basename","process","children","onRedirectCallback","initOptions","setIsAuthenticated","user","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","getUser","initAuth0","Provider","loginWithPopup","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","audience","redirect_uri","wsLink","WebSocketLink","uri","reconnect","connectionParams","token","headers","authorization","undefined","httpLink","HttpLink","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","oper","setContext","request","subscribe","next","bind","complete","catch","unsubscribe","link","split","query","getMainDefinition","kind","client","ApolloClient","from","cache","InMemoryCache","getElementById"],"mappings":"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","file":"static/js/main.69de7e11.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport createAuth0Client from '@auth0/auth0-spa-js';\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes('code=')) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Link to=\"/products\">\r\n        <div className=\"split left\">\r\n          <div className=\"centered\">\r\n            <h1>Products</h1>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <Link to=\"/events\">\r\n        <div className=\"split right\">\r\n          <div className=\"centered\">\r\n            <h1>Events</h1>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { useAuth0 } from '../react-auth0-spa';\r\n\r\nconst Login = () => {\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"split left\" onClick={() => loginWithRedirect({})}>\r\n        <div className=\"centered\">\r\n          <h1>Log In</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"split right\">\r\n        <div className=\"centered\">\r\n          <h1>Sign Up</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useAuth0 } from '../react-auth0-spa';\r\n\r\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\r\n  const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    if (loading || isAuthenticated) {\r\n      return;\r\n    }\r\n    const fn = async () => {\r\n      await loginWithRedirect({\r\n        appState: { targetUrl: path }\r\n      });\r\n    };\r\n    fn();\r\n  }, [loading, isAuthenticated, loginWithRedirect, path]);\r\n\r\n  const render = props =>\r\n    isAuthenticated === true ? <Component {...props} /> : null;\r\n\r\n  return <Route path={path} render={render} {...rest} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import gql from 'graphql-tag';\r\n// good example on auth header mutations: https://www.apollographql.com/docs/tutorial/mutations/\r\nexport const PRODUCTS = gql`\r\n  query {\r\n    products {\r\n      sku\r\n      name\r\n      category_id\r\n      category {\r\n        name\r\n      }\r\n      date_created\r\n      enabled\r\n      count\r\n      last_restock\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CATEGORIES = gql`\r\n  query {\r\n    categories {\r\n      id\r\n      name\r\n      sku_code\r\n      products {\r\n        sku\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// mutations: https://devhoot.ooo/build-a-react-graphql-app-with-apollo-client-powered-by-hasura-engine/\r\nexport const ADD_PRODUCT = gql`\r\n  mutation(\r\n    $name: String!\r\n    $sku: String!\r\n    $count: Int!\r\n    $cat_id: Int!\r\n    $date_added: date!\r\n    $last_restock: date\r\n  ) {\r\n    insert_products(\r\n      objects: [\r\n        {\r\n          name: $name\r\n          sku: $sku\r\n          count: $count\r\n          category_id: $cat_id\r\n          date_created: $date_added\r\n          last_restock: $last_restock\r\n        }\r\n      ]\r\n    ) {\r\n      returning {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_RESTOCK = gql`\r\n  mutation($product_id: Int!, $date: date!, $count: Int!) {\r\n    insert_restocks(\r\n      objects: [{ product_id: $product_id, date: $date, count: $count }]\r\n    ) {\r\n      returning {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CATEGORIES_SUBSCRIPTION = gql`\r\n  subscription {\r\n    categories {\r\n      id\r\n      name\r\n      sku_code\r\n      products {\r\n        sku\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PRODUCTS_SUBSCRIPTION = gql`\r\n  subscription {\r\n    products {\r\n      id\r\n      sku\r\n      name\r\n      category {\r\n        name\r\n      }\r\n      date_created\r\n      enabled\r\n      count\r\n      last_restock\r\n      restocks(order_by: { date: asc }) {\r\n        id\r\n        date\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PRODUCT_SUBSCRIPTION = gql`\r\n  subscription($id: Int!) {\r\n    products(where: { id: { _eq: $id } }) {\r\n      id\r\n      sku\r\n      name\r\n      category {\r\n        name\r\n      }\r\n      date_created\r\n      enabled\r\n      count\r\n      last_restock\r\n      restocks(order_by: { date: asc }) {\r\n        id\r\n        date\r\n        count\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DELETE_PRODUCT = gql`\r\n  mutation($id: Int!) {\r\n    delete_products(where: { id: { _eq: $id } }) {\r\n      returning {\r\n        sku\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TOGGLE_ACTIVE = gql`\r\n  mutation($id: Int!, $enabled: Boolean!) {\r\n    update_products(where: { id: { _eq: $id } }, _set: { enabled: $enabled }) {\r\n      returning {\r\n        sku\r\n        enabled\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useMutation, useSubscription } from '@apollo/react-hooks';\r\nimport { TOGGLE_ACTIVE, PRODUCTS_SUBSCRIPTION } from '../queries';\r\n\r\nconst ProductTable = props => {\r\n  const { data, loading, error } = useSubscription(PRODUCTS_SUBSCRIPTION);\r\n  const [toggleActive] = useMutation(TOGGLE_ACTIVE);\r\n  if (loading) return 'Loading';\r\n  if (error) return `Error: ${error.message}`;\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>SKU</th>\r\n          <th>Name</th>\r\n          <th>Date Added</th>\r\n          <th>Enabled</th>\r\n          <th>Count</th>\r\n          <th>Last Restock Date</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.products.length > 0 ? (\r\n          data.products.map(product => (\r\n            <tr key={product.id}>\r\n              <td>{product.sku}</td>\r\n              <td>{product.name}</td>\r\n              <td>{product.date_created}</td>\r\n              <td>\r\n                <FontAwesomeIcon\r\n                  icon={product.enabled ? 'check' : 'times'}\r\n                  onClick={() =>\r\n                    toggleActive({\r\n                      variables: { id: product.id, enabled: !product.enabled }\r\n                    })\r\n                  }\r\n                />\r\n              </td>\r\n              <td>{product.count}</td>\r\n              <td>{product.last_restock}</td>\r\n              <td>\r\n                <Link\r\n                  to={{\r\n                    pathname: `/products/${product.id}`,\r\n                    state: {\r\n                      product: data.products.find(product => product.id)\r\n                    }\r\n                  }}\r\n                >\r\n                  <button>Details</button>\r\n                </Link>\r\n                <button\r\n                  onClick={() => props.editRow(product)}\r\n                  className='button muted-button'\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() =>\r\n                    console.log(\r\n                      props.deleteProduct({ variables: { id: product.id } })\r\n                    )\r\n                  }\r\n                  className='button muted-button'\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))\r\n        ) : (\r\n          <tr>\r\n            <td colSpan={8}>No products</td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ProductTable;\r\n","import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ADD_PRODUCT } from '../../queries';\r\n\r\nconst AddProductForm = props => {\r\n  const categories = props.categoryList;\r\n  const today = new Date();\r\n  const initialFormState = {\r\n    id: null,\r\n    sku: '',\r\n    name: '',\r\n    category: '',\r\n    date: today.toLocaleDateString(),\r\n    enabled: true,\r\n    count: '',\r\n    restock: ''\r\n  };\r\n  const [addProduct] = useMutation(ADD_PRODUCT);\r\n  const [product, setProduct] = useState(initialFormState);\r\n  const [date, setDate] = useState(today);\r\n\r\n  const generateSKU = id => {\r\n    const category = categories.find(cat => {\r\n      return cat.id === id;\r\n    });\r\n    const skus = category.products.map(product => {\r\n      return parseInt(product.sku.substring(4));\r\n    });\r\n    const skuNumber = skus.length > 0 ? Math.max(...skus) + 1 : 1;\r\n    return category.sku_code.concat(skuNumber);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setProduct({ ...product, [name]: value });\r\n  };\r\n\r\n  const handleDateChange = date => {\r\n    setDate(date);\r\n\r\n    setProduct({ ...product, date: date.toLocaleDateString() });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete='off'\r\n      onSubmit={event => {\r\n        event.preventDefault();\r\n        if (!product.name || !product.category || !product.count) return;\r\n        product.sku = generateSKU(parseInt(product.category));\r\n        product.restock = product.date;\r\n        addProduct({\r\n          variables: {\r\n            name: product.name,\r\n            sku: product.sku,\r\n            count: parseInt(product.count),\r\n            cat_id: parseInt(product.category),\r\n            date_added: product.date,\r\n            last_restock: product.restock\r\n          }\r\n        });\r\n        setProduct(initialFormState);\r\n\r\n        props.hide();\r\n      }}\r\n    >\r\n      <div className='flex-row'>\r\n        <div className='flex-large'>\r\n          <label>Name</label>\r\n          <input\r\n            type='text'\r\n            name='name'\r\n            value={product.name}\r\n            onChange={handleInputChange}\r\n          />\r\n          <label>Date Added</label>\r\n          <DatePicker name='date' selected={date} onChange={handleDateChange} />\r\n        </div>\r\n        <div className='flex-large'>\r\n          <label>Category</label>\r\n          <select\r\n            name='category'\r\n            value={product.category}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=''>Select a category</option>\r\n            {categories.map(category => (\r\n              <option key={category.sku_code} value={category.id}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <label>Initial Count</label>\r\n          <input\r\n            type='number'\r\n            name='count'\r\n            value={product.count}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <button>Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddProductForm;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst EditProductForm = props => {\r\n  const categories = [\r\n    { name: 'Lily', sku: 'lil' },\r\n    { name: 'Raphie', sku: 'rph' },\r\n    { name: 'Tiny', sku: 'tny' }\r\n  ];\r\n  const [product, setProduct] = useState(props.currentProduct);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setProduct({ ...product, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setProduct(props.currentProduct);\r\n  }, [props]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={event => {\r\n        event.preventDefault();\r\n        console.log(product);\r\n        props.updateProduct(product.id, product);\r\n      }}\r\n    >\r\n      <div className=\"flex-row\">\r\n        <div className=\"flex-large\">\r\n          <label>Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={product.name}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-large\">\r\n          <label>Category</label>\r\n          <select\r\n            name=\"category\"\r\n            value={product.category}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=\"\">Select a category</option>\r\n            {categories.map(category => (\r\n              <option key={category.sku} value={category.name}>\r\n                {category.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <button>Update product</button>\r\n      <button\r\n        onClick={() => props.cancelUpdate()}\r\n        className=\"button muted-button\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditProductForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useAuth0 } from '../react-auth0-spa';\r\n\r\nconst Header = props => {\r\n  const { logout } = useAuth0();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to={props.back}>\r\n        <FontAwesomeIcon icon=\"arrow-left\" size=\"2x\" />\r\n      </Link>\r\n      <button onClick={() => logout()}>Log out</button>\r\n      <h1>{props.title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","//\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Modal = ({ isShowing, hide, title, content }) =>\r\n  isShowing\r\n    ? ReactDOM.createPortal(\r\n        <React.Fragment>\r\n          <div className=\"modal-overlay\" />\r\n          <div\r\n            className=\"modal-wrapper\"\r\n            aria-modal\r\n            aria-hidden\r\n            tabIndex={-1}\r\n            role=\"dialog\"\r\n          >\r\n            <div className=\"modal\">\r\n              <div className=\"modal-header\">\r\n                <h2>{title}</h2>\r\n                <FontAwesomeIcon\r\n                  icon=\"times\"\r\n                  data-dismiss=\"modal\"\r\n                  onClick={hide}\r\n                />\r\n              </div>\r\n              <div>{content}</div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>,\r\n        document.body\r\n      )\r\n    : null;\r\n\r\nexport default Modal;\r\n","//https://upmostly.com/tutorials/modal-components-react-custom-hooks\r\nimport { useState } from 'react';\r\n\r\nconst useModal = () => {\r\n  const [isShowing, setIsShowing] = useState(false);\r\n\r\n  function toggle() {\r\n    setIsShowing(!isShowing);\r\n  }\r\n\r\n  return {\r\n    isShowing,\r\n    toggle\r\n  };\r\n};\r\n\r\nexport default useModal;\r\n","import React, { useState } from 'react';\r\nimport ProductTable from '../../components/tables/ProductTable';\r\nimport AddProductForm from '../../components/forms/products/AddProductForm';\r\nimport EditProductForm from '../../components/forms/products/EditProductForm';\r\nimport Header from '../../components/Header';\r\nimport Modal from '../../components/modal/Modal';\r\nimport useModal from '../../components/modal/useModal';\r\nimport { useSubscription, useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  CATEGORIES_SUBSCRIPTION,\r\n  DELETE_PRODUCT\r\n} from '../../components/queries';\r\n\r\nconst CategorySubscription = () => {\r\n  const { data, loading, error } = useSubscription(CATEGORIES_SUBSCRIPTION);\r\n\r\n  if (loading) return 'Loading';\r\n  if (error) return `Error: ${error.message}`;\r\n  if (!data) return 'None found';\r\n\r\n  return data.categories;\r\n};\r\n\r\nconst Products = () => {\r\n  const categoriesData = CategorySubscription();\r\n  const productsData = [];\r\n\r\n  const [products, setProducts] = useState(productsData);\r\n  const { isShowing, toggle } = useModal();\r\n\r\n  const [deleteProduct] = useMutation(DELETE_PRODUCT);\r\n\r\n  const [editing, setEditing] = useState(false);\r\n  const initialFormState = { id: null, name: '', category: '' };\r\n  const [currentProduct, setCurrentProduct] = useState(initialFormState);\r\n\r\n  const editRow = product => {\r\n    setEditing(true);\r\n    toggle();\r\n    setCurrentProduct({\r\n      id: product.id,\r\n      name: product.name,\r\n      category: product.category\r\n    });\r\n  };\r\n\r\n  const updateProduct = (id, updatedProduct) => {\r\n    setEditing(false);\r\n    toggle();\r\n    setProducts(\r\n      products.map(product => (product.id === id ? updatedProduct : product))\r\n    );\r\n  };\r\n\r\n  const cancelUpdate = () => {\r\n    setEditing(false);\r\n    toggle();\r\n  };\r\n\r\n  const addProductForm = (\r\n    <AddProductForm hide={toggle} categoryList={categoriesData} />\r\n  );\r\n\r\n  const editProductForm = (\r\n    <EditProductForm\r\n      editing={editing}\r\n      cancelUpdate={cancelUpdate}\r\n      currentProduct={currentProduct}\r\n      updateProduct={updateProduct}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className='full-container'>\r\n      <Header title='Products' back='/' />\r\n      <Modal\r\n        isShowing={isShowing}\r\n        hide={toggle}\r\n        title={editing ? 'Editing ' + currentProduct.name : 'Add a new product'}\r\n        content={editing ? editProductForm : addProductForm}\r\n      />\r\n      <div className='container'>\r\n        <button onClick={toggle}>Add new product</button>\r\n        <div className='flex-large'>\r\n          <ProductTable editRow={editRow} deleteProduct={deleteProduct} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ADD_RESTOCK } from '../../queries';\r\n\r\nconst AddRestockForm = props => {\r\n  const today = new Date();\r\n  const initialFormState = {\r\n    id: null,\r\n    proudct_id: '',\r\n    date: today.toLocaleDateString(),\r\n    count: ''\r\n  };\r\n  const [addRestock] = useMutation(ADD_RESTOCK);\r\n  const [restock, setRestock] = useState(initialFormState);\r\n  const [date, setDate] = useState(today);\r\n\r\n  const handleInputChange = event => {\r\n    const { name, value } = event.target;\r\n\r\n    setRestock({ ...restock, [name]: value });\r\n  };\r\n\r\n  const handleDateChange = date => {\r\n    setDate(date);\r\n\r\n    setRestock({ ...restock, date: date.toLocaleDateString() });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete='off'\r\n      onSubmit={event => {\r\n        event.preventDefault();\r\n        if (!restock.count) return;\r\n        restock.product_id = props.id;\r\n        addRestock({\r\n          variables: {\r\n            product_id: restock.product_id,\r\n            count: parseInt(restock.count),\r\n            date: restock.date\r\n          }\r\n        });\r\n        setRestock(initialFormState);\r\n\r\n        props.hide();\r\n      }}\r\n    >\r\n      <div className='flex-row'>\r\n        <div className='flex-large'>\r\n          <label>Count</label>\r\n          <input\r\n            type='number'\r\n            name='count'\r\n            value={restock.count}\r\n            onChange={handleInputChange}\r\n          />\r\n        </div>\r\n        <div className='flex-large'>\r\n          <label>Date Restocked</label>\r\n          <DatePicker name='date' selected={date} onChange={handleDateChange} />\r\n        </div>\r\n      </div>\r\n      <button>Save</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddRestockForm;\r\n","import React from 'react';\r\n\r\nconst TrendsTable = props => {\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Type</th>\r\n          <th>Count</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.restocks.length > 0 ? (\r\n          props.restocks.map(restock => (\r\n            <tr key={restock.id}>\r\n              <td>{restock.date}</td>\r\n              <td>Restock</td>\r\n              <td>{restock.count}</td>\r\n            </tr>\r\n          ))\r\n        ) : (\r\n          <tr>\r\n            <td colSpan={3}>No activity</td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TrendsTable;\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport TrendsTable from '../../components/tables/TrendsTable';\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false\r\n  },\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst generateData = activity => {\r\n  const labels = [];\r\n  const data = [];\r\n\r\n  activity.forEach(element => {\r\n    labels.push(element.date);\r\n    data.push(element.count);\r\n  });\r\n\r\n  // https://www.educative.io/edpresso/how-to-use-chartjs-to-create-charts-in-react\r\n  return {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: 'Nice',\r\n        lineTension: 0,\r\n        fill: false,\r\n        data: data,\r\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n        borderColor: 'rgba(255, 99, 132, 1)',\r\n        borderWidth: 1\r\n      }\r\n    ]\r\n  };\r\n};\r\n\r\nconst ProductActivity = props => {\r\n  return (\r\n    <div className=\"full-container\">\r\n      <Line data={generateData(props.restocks)} options={options} />\r\n      <button onClick={props.toggle}>Add new restock</button>\r\n      <TrendsTable restocks={props.restocks} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductActivity;\r\n","import React from 'react';\r\nimport AddRestockForm from '../../components/forms/restocks/AddRestockForm';\r\nimport ProductActivity from './ProductActivity';\r\nimport Header from '../../components/Header';\r\nimport Modal from '../../components/modal/Modal';\r\nimport useModal from '../../components/modal/useModal';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport { useSubscription } from '@apollo/react-hooks';\r\nimport { PRODUCT_SUBSCRIPTION } from '../../components/queries';\r\n\r\nconst ProductSubscription = id => {\r\n  const { data, loading, error } = useSubscription(PRODUCT_SUBSCRIPTION, {\r\n    variables: { id: id }\r\n  });\r\n\r\n  if (loading) return 'Loading';\r\n  if (error) return `Error: ${error.message}`;\r\n  if (!data) return 'None found';\r\n\r\n  // TODO: find a better way to return a single product from subscription\r\n  return data.products[0];\r\n};\r\n\r\nconst Product = ({ match }) => {\r\n  // https://tylermcginnis.com/react-router-url-parameters/\r\n  const product = ProductSubscription(match.params.id);\r\n  const { isShowing, toggle } = useModal();\r\n\r\n  const addRestockForm = <AddRestockForm hide={toggle} id={product.id} />;\r\n  // LOL hack\r\n  return product.sku ? (\r\n    <div className=\"full-container\">\r\n      <Header title={product.sku} back=\"/products\" />\r\n      <Modal\r\n        isShowing={isShowing}\r\n        hide={toggle}\r\n        title={'Add a new restock for ' + product.sku}\r\n        content={addRestockForm}\r\n      />\r\n      <div className=\"container\">\r\n        <h2>Some data about {product.name}</h2>\r\n        <Tabs>\r\n          <TabList>\r\n            <Tab>Info</Tab>\r\n            <Tab>Trends</Tab>\r\n          </TabList>\r\n          <TabPanel>\r\n            <h2>hello</h2>\r\n          </TabPanel>\r\n          <TabPanel>\r\n            <h2>{product.count}</h2>\r\n            <ProductActivity toggle={toggle} restocks={product.restocks} />\r\n          </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div>Loading...</div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EventTable = props => (\r\n  <table>\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Location</th>\r\n        <th>Date</th>\r\n        <th></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {props.events.length > 0 ? (\r\n        props.events.map(event => (\r\n          <tr key={event.id}>\r\n            <td>{event.name}</td>\r\n            <td>{event.location}</td>\r\n            <td>{event.date}</td>\r\n            <td>\r\n              <Link to={'/events/' + event.id}>\r\n                <button>Sales</button>\r\n              </Link>\r\n              <button\r\n                onClick={() => props.editRow(event)}\r\n                className=\"button muted-button\"\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                onClick={() => props.deleteEvent(event.id)}\r\n                className=\"button muted-button\"\r\n              >\r\n                Delete\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        ))\r\n      ) : (\r\n        <tr>\r\n          <td colSpan={4}>No events</td>\r\n        </tr>\r\n      )}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default EventTable;\r\n","import React, { useState } from 'react';\r\nimport EventTable from '../../components/tables/EventTable';\r\nimport Header from '../../components/Header';\r\n\r\nconst Events = () => {\r\n  const eventsData = [\r\n    { id: 1, name: 'a convention', location: 'los angeles', date: 'april' },\r\n    {\r\n      id: 2,\r\n      name: 'another convention',\r\n      location: 'sacramento',\r\n      date: 'february'\r\n    },\r\n    { id: 3, name: 'convention', location: 'fresno', date: 'asdf' },\r\n    { id: 4, name: 'aon', location: 'new york city', date: 'date' },\r\n    { id: 5, name: 'convosid', location: 'seattle', date: '02/31/2020' },\r\n    { id: 6, name: 'dallasconvention', location: 'dallas', date: '9' },\r\n    {\r\n      id: 7,\r\n      name: 'RTX',\r\n      location: 'austin',\r\n      date: 'twelve twelve twentytwenty'\r\n    },\r\n    { id: 8, name: 'zotzotzot', location: 'irvine', date: 'pog' },\r\n    { id: 9, name: 'AX', location: 'los angeles', date: 'sad' }\r\n  ];\r\n\r\n  const [events, setEvents] = useState(eventsData);\r\n\r\n  const deleteEvent = id => {\r\n    setEvents(events.filter(event => event.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className='full-container'>\r\n      <Header title='Events' back='/' />\r\n      <div className='container'>\r\n        <button>Add new event</button>\r\n        <div className='flex-large'>\r\n          <EventTable events={events} deleteEvent={deleteEvent} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Events;\r\n","import React, { useState, useEffect } from 'react';\r\n//import SalesTable from '../../tables/SalesTable'\r\nimport Header from '../../components/Header';\r\n\r\nconst Sales = props => {\r\n  const eventId = props.match.params.id;\r\n\r\n  console.log('fetching ' + eventId);\r\n  const initialEventSalesState = {\r\n    eventSales: {},\r\n    loading: true\r\n  };\r\n\r\n  const salesData = [\r\n    {\r\n      id: 1,\r\n      day: 2,\r\n      items: ['sku-1', 'sku-3'],\r\n      total: 20,\r\n      cc: true,\r\n      female: false\r\n    }\r\n  ];\r\n\r\n  const [sales, setSales] = useState(initialEventSalesState);\r\n\r\n  useEffect(() => {\r\n    const getSales = async () => {\r\n      // should have await function getting sales for id\r\n      const data = salesData;\r\n\r\n      setSales(data);\r\n    };\r\n    getSales();\r\n  }, []);\r\n\r\n  const deleteSale = id => {\r\n    setSales(sales.filter(sale => sale.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"full-container\">\r\n      <Header title={'Sales for event ' + eventId} back=\"/events\" />\r\n      <div className=\"container\">\r\n        <button>Add new sale</button>\r\n        <div className=\"flex-large\">\r\n          {/* <SalesTable sales={sales} deleteSale={deleteSale} /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sales;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { useAuth0 } from './react-auth0-spa';\r\nimport Home from './views/Home';\r\nimport Login from './views/Login';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport Products from './views/products/Products';\r\nimport Product from './views/products/Product';\r\nimport Events from './views/events/Events';\r\nimport Sales from './views/sales/Sales';\r\n\r\nconst App = () => {\r\n  const { isAuthenticated, loading } = useAuth0();\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  return (\r\n    <Switch>\r\n      {!isAuthenticated && <Route exact path='/' component={Login} />}\r\n      {isAuthenticated && <Route exact path='/' component={Home} />}\r\n      <PrivateRoute exact path='/products' component={Products} />\r\n      <PrivateRoute path='/products/:id' component={Product} />\r\n      <PrivateRoute exact path='/events' component={Events} />\r\n      <PrivateRoute path='/events/:id' component={Sales} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport {\r\n  faCheck,\r\n  faTimes,\r\n  faCoffee,\r\n  faArrowLeft\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport './index.css';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport App from './App';\r\n// import * as serviceWorker from \"./serviceWorker\";\r\nimport { Auth0Provider } from './react-auth0-spa';\r\nimport { GraphQLProvider } from './GraphQLProvider';\r\nimport config from './auth_config.json';\r\nimport history from './utils/history';\r\n\r\n// A function that routes the user to the right place\r\n// after login\r\nconst onRedirectCallback = appState => {\r\n  history.push(\r\n    appState && appState.targetUrl\r\n      ? appState.targetUrl\r\n      : window.location.pathname\r\n  );\r\n};\r\n\r\nlibrary.add(faCheck, faTimes, faCoffee, faArrowLeft);\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Auth0Provider\r\n      domain={config.domain}\r\n      client_id={config.clientId}\r\n      audience={'https://nekoma.auth0.com/api/v2/'}\r\n      // TODO: configure or find good value for redirect_uri on both dev/prod\r\n      redirect_uri={'https://tedzchu.com/nekoma-frontend/'}\r\n      onRedirectCallback={onRedirectCallback}\r\n    >\r\n      <GraphQLProvider>\r\n        <App />\r\n      </GraphQLProvider>\r\n    </Auth0Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// serviceWorker.unregister();\r\n","import React from 'react';\r\nimport ApolloClient from 'apollo-client';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { useAuth0 } from './react-auth0-spa';\r\n\r\n// Setup the network \"links\"\r\nimport { WebSocketLink } from 'apollo-link-ws';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { split, ApolloLink, Observable } from 'apollo-link';\r\nimport { getMainDefinition } from 'apollo-utilities';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\n\r\n// https://github.com/auth0-samples/auth0-javascript-samples/issues/79\r\n// https://github.com/vonkanehoffen/planning-alerts/blob/master/frontend-web/src/GraphQLProvider.js\r\n\r\n/**\r\n * Apollo Provider with Auth0 token.\r\n * @param children\r\n * @returns {*}\r\n * @constructor\r\n */\r\nexport const GraphQLProvider = ({ children }) => {\r\n  const { loading, isAuthenticated, getTokenSilently } = useAuth0();\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  // https://github.com/apollographql/apollo-client/issues/3967#issuecomment-450255702\r\n  const wsLink = new WebSocketLink({\r\n    uri: 'wss://nekoma.herokuapp.com/v1/graphql',\r\n    options: {\r\n      reconnect: true,\r\n      connectionParams: async () => {\r\n        const token = isAuthenticated ? await getTokenSilently() : null;\r\n        return {\r\n          headers: {\r\n            authorization: token ? `Bearer ${token}` : undefined\r\n          }\r\n        };\r\n      }\r\n    }\r\n  });\r\n\r\n  const httpLink = new HttpLink({\r\n    uri: 'https://nekoma.herokuapp.com/v1/graphql'\r\n  });\r\n\r\n  const request = async operation => {\r\n    const token = isAuthenticated ? await getTokenSilently() : null;\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: token ? `Bearer ${token}` : undefined\r\n      }\r\n    });\r\n  };\r\n\r\n  const requestLink = new ApolloLink(\r\n    (operation, forward) =>\r\n      new Observable(observer => {\r\n        let handle;\r\n        Promise.resolve(operation)\r\n          .then(oper => request(oper))\r\n          .then(() => {\r\n            handle = forward(operation).subscribe({\r\n              next: observer.next.bind(observer),\r\n              error: observer.error.bind(observer),\r\n              complete: observer.complete.bind(observer)\r\n            });\r\n          })\r\n          .catch(observer.error.bind(observer));\r\n\r\n        return () => {\r\n          if (handle) handle.unsubscribe();\r\n        };\r\n      })\r\n  );\r\n\r\n  const link = split(\r\n    // split based on operation type\r\n    ({ query }) => {\r\n      const { kind, operation } = getMainDefinition(query);\r\n      return kind === 'OperationDefinition' && operation === 'subscription';\r\n    },\r\n    wsLink,\r\n    httpLink\r\n  );\r\n\r\n  const client = new ApolloClient({\r\n    link: ApolloLink.from([requestLink, link]),\r\n    cache: new InMemoryCache()\r\n    // uri: 'https://nekoma.herokuapp.com/v1/graphql',\r\n  });\r\n\r\n  return <ApolloProvider client={client}>{children}</ApolloProvider>;\r\n};\r\n"],"sourceRoot":""}